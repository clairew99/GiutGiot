import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar

buildscript {
	ext {
		restdocsApiSpecVersion = '0.16.2'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
	id 'com.epages.restdocs-api-spec' version "0.17.1"
	id "org.hidetake.swagger.generator" version "2.18.2"
}

group = 'com.gugucon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

swaggerSources {
	sample {
		setInputFile(file("$buildDir/api-spec/openapi3.yaml"))
	}
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'p6spy:p6spy:3.9.1'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'com.google.code.gson:gson:2.8.9'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.17.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	swaggerUI 'org.webjars:swagger-ui:4.11.1'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}


tasks.register('copySwaggerUI', Copy) {
	dependsOn 'generateSwaggerUISample'

	def generateSwaggerUISampleTask = tasks.named('generateSwaggerUISample', GenerateSwaggerUI).get()

	from("${generateSwaggerUISampleTask.outputDir}")
	into("${buildDir}/resources/main/static")
}

tasks.named('jar').configure {
	dependsOn 'copySwaggerUI'
}

tasks.named('resolveMainClassName').configure {
	dependsOn 'copySwaggerUI'
}

tasks.withType(GenerateSwaggerUI) {
	dependsOn 'openapi3'
}

tasks.withType(BootJar) {
	dependsOn 'copySwaggerUI'
}

tasks.withType(Test) {
	systemProperty 'file.encoding', 'UTF-8'
}

openapi3 {
	setServer("${System.getenv('KIOT_URL')}")
	title = "restdocs-swagger API Documentation"
	description = "Spring REST Docs with SwaggerUI."
	version = "0.0.1"
	format = "yaml"
}